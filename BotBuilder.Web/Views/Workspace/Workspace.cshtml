@using BotBuilder.Web.Data
@model BotBuilder.Web.Data.Project
@{
    ViewData["Title"] = "Workspace";
    var projectStep = Model.ProjectSteps.OrderBy(x => x.ProjectStepOrder).First();
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Dashboard", "Dashboard")">Dashboard</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Workspace</li>
    </ol>
</nav>

<button class="btn btn-primary" onclick="executeWorkspace()">Save</button>

<div class="container">
    <div id="blocklyDiv" style="height: 64vh; width: auto;"></div>
</div>

<partial name="_ToolboxPartial" />

<div style="display: none;">
    @Html.Raw(projectStep.StepXML)
</div>

@section Scripts{
    <environment include="Development">
        <script src="~/blockly/blockly_uncompressed.js"></script>
        <script src="~/blockly/blocks_compressed.js"></script>
        <script src="~/blockly/msg/js/en.js"></script>
        <script src="~/blockly/javascript_compressed.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/blockly/blockly_compressed.js" asp-append-version="true"></script>
        <script src="~/blockly/blocks_compressed.js" asp-append-version="true"></script>
        <script src="~/blockly/msg/js/en.js" asp-append-version="true"></script>
        <script src="~/blockly/javascript_compressed.js" asp-append-version="true"></script>
    </environment>

    <script>
        var toolbox = document.getElementById("toolbox");

        var options = {
            toolbox: toolbox,
            collapse: true,
            comments: true,
            disable: true,
            maxBlocks: Infinity,
            trashcan: true,
            horizontalLayout: false,
            toolboxPosition: 'start',
            css: true,
            media: 'https://blockly-demo.appspot.com/static/media/',
            rtl: false,
            scrollbars: true,
            sounds: true,
            oneBasedIndex: true
        };

        /* Inject your workspace */
        var workspace = Blockly.inject('blocklyDiv', options);

        //
        var workspaceBlocks = document.getElementById("workspaceBlocks");

        /* Load blocks to workspace. */
        Blockly.Xml.domToWorkspace(workspaceBlocks, workspace);

        var xml = Blockly.Xml.workspaceToDom(workspace);
        var xml_text = Blockly.Xml.domToText(xml);

        function executeWorkspace() {
            Blockly.JavaScript.addReservedWords('code');
            var code = Blockly.JavaScript.workspaceToCode(workspace);

            var xml = Blockly.Xml.workspaceToDom(workspace);
            xml.id = "workspaceBlocks";
            var xml_text = Blockly.Xml.domToText(xml);

            $.ajax({
                url: '@Url.Action("PutProjectStep", "Workspace", new { id = projectStep.ProjectStepId })',
                data: {
                    "projectStepId": "@projectStep.ProjectStepId",
                    "stepXML": xml_text,
                    "projectStepOrder": "@projectStep.ProjectStepOrder",
                    "projectId": "@projectStep.ProjectId"
                },
                method: 'PUT'
            });

            $.ajax({
                url: '@Url.Action("PutProjectStepCode", "Workspace", new { id = projectStep.ProjectStepId })',
                data: {
                    "code": code
                },
                method: 'PUT'
            });
        }
    </script>
}
